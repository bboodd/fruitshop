<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.shop.fruitshop.user.UserMapper">

<!--    회원가입    -->
    <insert id="joinUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user (email, nickname, password)
        VALUES (#{email}, #{nickname}, #{password})
    </insert>

<!--    회원 약관 매핑   -->
    <insert id="joinUserTerm">
        INSERT INTO user_term(user_id, term_id)
        VALUES (#{userId},
                (SELECT id FROM term WHERE title = #{termStatus}))
    </insert>

<!--    이메일로 회원 찾기    -->
    <select id="findByEmail" resultType="com.shop.fruitshop.domain.User">
        SELECT *
        FROM user
        WHERE email = #{email}
    </select>

<!--    아이디 중복 체크   -->
    <select id="emailCheck" resultType="int">
        SELECT COUNT(*)
        FROM user
        WHERE email = #{email}
    </select>

<!--    닉네임 중복 체크   -->
    <select id="nicknameCheck" resultType="int">
        SELECT COUNT(*)
        FROM user
        WHERE nickname = #{nickname}
    </select>

<!--    비밀번호 변경   -->
    <update id="changePassword">
        UPDATE user
        SET password = #{newPassword}
        WHERE email = #{email}
    </update>

    <!--    메인 페이지 유저없이 상품 선택   -->
    <select id="selectProductAndUrlAll" resultType="java.util.Map">
        SELECT
            product.id,
            product.status,
            product.name,
            FORMAT(product.price, 0) AS price,
            product.discount_rate,
            DATE_FORMAT(product.created_at, '%Y-%m-%d') AS created_at,
            DATE_FORMAT(product.updated_at, '%Y-%m-%d') AS updated_at,
            category.category_name,
            (SELECT url FROM product_image WHERE product_id = product.id AND file_path = 'mainImages') AS url
        FROM product product
                 JOIN category category
                      ON product.category_id = category.id
        WHERE product.status = 1
        ORDER BY product.id DESC
    </select>

    <!--    메인 페이지 선택 상품 리스트 조회   -->
    <select id="selectProductAndUrlList" resultType="java.util.Map">
        SELECT

            product.id,
            product.status,
            product.name,
            FORMAT(product.price, 0) AS price,
            product.discount_rate,
            DATE_FORMAT(product.created_at, '%Y-%m-%d') AS created_at,
            DATE_FORMAT(product.updated_at, '%Y-%m-%d') AS updated_at,
            category.category_name,
            (SELECT url FROM product_image WHERE product_id = product.id AND file_path = 'mainImages') AS url,
            <if test="userId != ''">
                ifnull((SELECT id FROM likes WHERE product_id = product.id AND user_id = #{userId}),0) AS like_id
            </if>
        FROM product product
            JOIN category category
                ON product.category_id = category.id
        <where>
            product.status = 1
            <if test="selectedCategory != ''">
                AND category_name = #{selectedCategory}
            </if>
            <if test="searchKeyword != ''">
                AND product.name LIKE CONCAT('%', #{searchKeyword}, '%')
            </if>

        </where>
        ORDER BY product.id DESC
    </select>

    <!--    메인 페이지 로그인했을 때 상품 선택   -->
    <select id="selectProductAndUrlAndLikeAll" resultType="java.util.Map">
        SELECT
            product.id,
            product.status,
            product.name,
            FORMAT(product.price, 0) AS price,
            product.discount_rate,
            DATE_FORMAT(product.created_at, '%Y-%m-%d') AS created_at,
            DATE_FORMAT(product.updated_at, '%Y-%m-%d') AS updated_at,
            category.category_name,
            (SELECT url FROM product_image WHERE product_id = product.id AND file_path = 'mainImages') AS url,
            ifnull((SELECT id FROM likes WHERE product_id = product.id AND user_id = #{id}),0) AS like_id
        FROM product product
                 JOIN category category
                      ON product.category_id = category.id
        WHERE product.status = 1
        ORDER BY product.id DESC
    </select>

    <!--    찜 추가   -->
    <insert id="addLike">
        INSERT INTO likes(user_id, product_id)
        VALUES (#{userId}, #{productId})
    </insert>
    <!--    찜 삭제   -->
    <delete id="deleteLike">
        DELETE FROM likes
        WHERE user_id = #{userId} AND product_id = #{productId}
    </delete>
</mapper>